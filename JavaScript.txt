1. JAVA와 JAVA Script 다르다
2. JAVA Script로 할 수 있는 것들
    1. 웹 클라이언트(서비스를 제공받는) [HTML, CSS, JS] (2009년 이후 node.js출시로 가능)
    2. 웹 서버[node.js] (서비스를 제공하는)
    3. 모바일 [react native]
    4. 데스크톱 애플리케이션 [NW.js] VS JAVA(spring)
    5. 데이터베이스 관리 [NOSQL] VS SQL
3. 텍스트 에디터
    1. 프론트엔드: VScode, 아톰(회사 자유)
    2. 백엔드 : 이클립스, IntelliJ (인텔리제이)등
4. 브라우저[클라이언트 입장]
    1. 크롬, 엣지, 사파리 등
5. 크롬창 F12번 console의 오류 내용확인(빨간색 밑줄 표시)
6. ***** 줄바꿈(들여쓰기)반드시 할것 *****
7. 식별자 규칙
    1. 키워드를 사용하면 안 된다.
    2. 숫자로 시작하면 안된다.
    3. 특수문자는_와$만 사용가능하다.
    4. 공백 문자를 포함할 수 없다.
8. 식별자를  만들 때 관례
    1. 알파벳을 사용하는게 좋음
    2. 의미가 담긴 단어를 사용하는게 좋음
    3. 클래스의 이름은 항상 대문자 시작
9. 주석: /* */ , //(한줄)
10. 기본 용어
    1. 부호: (모스부호[짧은신호 또는 긴신호] >전기상태[있다 또는 없다] >이진수[0 또는 1])
    2. 코드: 정보를 다른 형태로 변환하는 규칙 [문법, 도구]
        1. java, html, css, js python
    3. 표현식: 하나 이상의 값/정보로 표현될 수 있는 코드를 의미 
    4. 문장: 표현식 한 개 이상 모인 것(명령문) 
    5. 프로그램: 문장이 모인 것(명령문의 집합)
    6. 프로세스: 현재 실행중인 프로그램(스케줄링/스레드)
    7. 웹 애플리케이션:  웹에서 사용하는 프로그램
    8. 응용프로그램: 사용자가 사용할 수 있도록 만든 프로그램(애플리케이션)
    
11. 부호 > 코드 > 표현식 > 문장 > 프로그램 
12. 사용처 따라
    1. 웹 애플리케이션 (프로세스)
    2. 앱 애플리케이션 (프로세스)
    3. 데스크탑 애플리케이션 (프로세스)


개발자/ 사람                              컴퓨터
<div>---------------명령어-------------> [번역]0101010101010

박스모델            <------------실행결과------------>

consol("안녕)---------------명령어------------> [번역]01011011101011111

-키워드 : 언어들이 미리 만든 (기능이 들어간) 단어들/
    !!: 키워드와 동일하게 이름을 정의하지 말자!! [중복문제]

-식별자 : 어떠한 변수/함수/명령등을 식별하기 위한 이름
    HTML/CSS : id, class, <마크업>
    JS: 변수/함수/클래스 등등
    1. 키워드 사용불가 2. 숫자시작불가 3. 특수문자는_,&만 가능 4. 공백불가능
    영어 권장(카멜 표기법), 의미있는이름

-주석: 코드 설명
    HTML: <!--주석-->
    CSS: /* 주석 */ 
    JS:
        1. 한줄주석: // 한줄 주석
        2. 여러줄 주석: /* 여러줄 주석*/



1. 입출력 방법 [*2/6]
    1. alert("출력하고 싶은 문구")                              : 경고창(확인버튼) 출력함수
    2. console.log("출력하고 싶은 문구)                         : console(f12개발자도구) 출력함수
    3. confirm("출력하고 싶은 문구")                            : 확인찬(확인= true/취소=false)버튼 출력함수
    4. prompt("출력하고 싶은 문구")                             : 입력상자(input, 확인=true/취소=false) 입력
    5. document.write("HTML"에 출력하고 싶은 문구)              : HTML 출력 함수
    6. document.특정식별자.html = "HTML에 출력하고 싶은 문구"    : 특정 요소/마크업에 출력함수

2. 기본 자료형
    -자료: 프로그램이 처리할 수 있는 모든 것
    -자료형: 자료 형태/모양/폼 나눠 놓은 것
        1. 숫자(number) 2. 문자열(string) 3.불(boolean)

        1.슷자와 문자열 구분
            273 vs "273" 다르다.
        
            1. 문자열 표현방법 : '문자열' 또는 "문자열" 
                주의할점: 1. '문자열" 불가능
                         2. "''" 가능
                         3. '""' 가능
            2. 이스케이프/제어 문자
                1. \n: 줄바꿈
                2. \t: 들여쓰기
                3. \\: 백슬래쉬 출력
                 그외 \", \' 연산자 출력시

            3. 문자열 연산자
                문자열 + 문자열: 문자열 연결 연산자["문자열" + "문자열"]
                [인덱스번호] : 문자열에서 인덱스(순서) 번쨰 문자 추출
                    -인덱스 : 저장된 순서번호 = 인덱스 0번 시작
                    [0][1][2][3][4]

                    '안녕하세요'[0] : 해당 문자열내 0번째 문자 > 안
                문자열.length: 문자열 내 문자 개수
                '안녕하세요' .length: 해당 문자열내 문자 개수 > 5


3. 연산자[연산/계산/논리 시 사용되는 특수문자]
    1. 산술 연산자: 결과값 출력
        + 더하기 - 빼기 * 곱하기 / 나누기 % 나머지
    2. 연결 연산자 : + 연결연산자
        숫자 + 숫자[더하기]
        숫자 + '문자열' [연결]
        '문자열' + '문자열'[연결]

    3. 비교연산자 : 비교후 true/참 혹은 false/거짓 반환
        > 초과 / 크다          < 미만 / 작다
        >= 이상 / 크거나 같다  <= 이하 / 작거나 같다
        ==같다[데이터비교]     ===같다[데이터/자료형 강력비교]
        != 같지않다     !== 같지않다 

    4. 관계 연산자: 주로 비교연산자를 2개 이상 사용할 때 true/참 혹은 false/거짓 반환
        && 이면서 면서 이고 모두 그리고 and조건         [모두 참이면 참]


        || 이거나 거나 또는 하나라도 or조건             [하나라도 참이면 참]


        | 반대 부정 not조건                            [참[t] >거짓[f] / 거짓[f] > 참[t]]


        *| 특수문자: shift + \(엔터위에 백슬래쉬)

    5. 증감연산자: 1증가 혹은 1감소
        ++  1증가 [++변수: 선위증가, 변수++: 후위증가]
        --  1감소 [--변수: 선위감소, 변수--: 후위감소]

    6. 대입연산자: 오른쪽 데이터를 왼쪽에 넣어주기/대입
        = 대입   [변수=10;   10이라는 데이터를 변수에 넣어주기/대입/저장]
        +=      오른쪽 데이터를 왼쪽값과 더한후에 왼쪽에 대입
        -=, *=, /=, %=, 등등
        