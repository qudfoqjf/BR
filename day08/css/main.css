@charset "utf-8";
*{
    font-family: 'Noto Sans KR', sans-serif;
    font-size: 18px;
    color: #121212;
}
a{text-decoration: none;}
.ffJosefin{
    font-family: 'Josefin Sans ', sans-serif;
}
.innerWrap{/* p.139 */
    width: 1240px; margin: 0 auto;
    padding: 80px 20px 0;
}
main h2{
    text-align: center;
    font-size: 60px;
    letter-spacing: 0.05em; /* 글자간격 */
}
header{
    background: url(../images/background.jpg);
    background-repeat: no-repeat;
    background-position: right center;
    background-size: cover;
    /* background:url(../images/background.jpg) no-repeat right center/ cover */
}
header .innerWrap{height: 720px; position: relative;}
header h1{
    padding-top: 120px;
}
header .scroll{
    position: absolute; left:0; bottom: 0;
    width: 100%; text-align: center; font-size: 16px;
    /* header .innerWrap */
}
header .scroll img{
    margin-top: 8px;
}
header nav{
    position: fixed;
    top:0; left: 0; width: 100%;
    z-index: 100;
}
header nav ul{
    display: flex;
    justify-content: space-around;
    width: 1240px;
    margin: 0 auto;
    padding: 10px 20px;
}
header nav ul li a:hover{
    text-decoration: underline;
}
.msgSec{
    background-color: #fbfaf7;
}
.msgSec p {
    text-align: center;
    line-height: 1.75;
    margin-bottom: 40px ;
}
.msgSec p.illust{
    margin-top: 80px; margin-bottom: 0px;
     /* p.illust :p요소의 class 명이 illust 
         .illust :전체요소의 class명이 illust이면 */ 
    position: relative;     /* 하위요소의 포지션 기준점 */
}
/* p. 151~152 */
.msgSec p.illust::before{
    content: url(../images/left\ leaf.png);
    position: absolute; left: 320px; bottom: -30px;
}
.msgSec p.illust::after{
    content: url(../images/rifgt\ leaf.png);
    position: absolute; right: 320px; bottom: -30px;
}

.dateSec{
    background-color: #ffffff;
    padding-bottom: 120px;
}
/* p.154 */
.dateSec .layoutWrap{display: flex;}
.dateSec .layoutWrap > p{flex-basis: 735px;}
.dateSec .layoutWrap > div{flex-basis: 465px; padding-top: 100px;}/* p.155 */
.dateSec .dateDetailSec{
    font-size: 72px;
    margin: 0 0 170px -100px;
    background-color: #ffffff;
    padding: 40px 64px;
    line-height: 1.2;
}

.word1{font-size: 50px;}
.word2{font-size: 40px;}
.word3{font-size: 60px;}
.accessSec{margin-left: 48px;}
.accessSec h3{
    color: #cfafa3;
    font-size: 55px;
    letter-spacing: .05em;
    margin-bottom: 8px;
}
.accessSec p {
    line-height: 1.6;
}
.formSec{
    background-color: #efe8d9;
    padding-bottom: 60px;
}

form{
    width: 600px;
    margin: 0 auto;
}
input[type="text"],
input[type="e-mail"],
select,
textarea {
    border: 1px solid #cccccc;
    background-color: #ffffff;
    width: 100%;
    margin-top: 5ps;
    padding: 4px 8px;
}
input[type="radio"],
input[type="check"]{
    width: 16px; height: 16px;
    vertical-align: baseline;  
    margin-right: 4px   
}

/* 
    p.150
    !important > style 속성 > id > class > 타입 > *
        1. p{text-size: 16px !important;}
        2. <div style="text-size:16px;>
        3. #id{text-size: 16px;}
        4. .class{text-size: 16px;}
        5. p{text-size: 16px;}
        6. *{ text-size:16ps;}
    p.151~152: 가상요소 선택자
        -HTML에 없던 내용물[주로 텍스트,이미지]를 css에서 넣어주는 속성
        ::before        :요소 앞부분에 내용을 가상으로 넣어주기
        ::after         :요소 뒷부분에 내용을 가상으로 넣어주기
            content     : 가상 요소의 내용물

    flex-basis: 465px;
        vs
    width:465px;

        차이점 : 1.flex-direction:colums일떄
                with: 고정  flex-basis: 전체사이즈 늘어남
                 2. 요소보다 더 큰 컨텐츠가 들어왔을때
                width: 고정  flex-basis
*/

